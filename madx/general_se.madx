!--------------------------------------------------------------------------
! MADX files for SPS slow extraction 
!
! F.M. Velotti - francesco.maria.velotti@cern.ch
!
!--------------------------------------------------------------------------


 option, -echo;
 option, RBARC=FALSE;  ! the length of a rectangular magnet
                       ! is the distance between the polefaces
                       ! and not the arc length
!assign, ECHO=ECHO.PRT;

! if only quads and bends have to be considered -> linear = 1
! else -> linear = 0


yes := 1;
no := 0;


linear = no;

match_extr_bump = no;

match_corr_bump = no;

correction = no;

extraction = yes;

nominal = yes;

!---------------------------------------------------------------
!         SPECIFY THE SPS BEAM CONFIGURATION, ENERGY and EMITTANCES
! 
!---------------------------------------------------------------

call, file = '/afs/cern.ch/eng/sps/2014/beams/cngs_extraction.beamx';
!--------------------------------------------------------------------------
! call the element definition file for SPS
!--------------------------------------------------------------------------
 call, file = '/afs/cern.ch/eng/sps/2014/elements/sps.ele';


!--------------------------------------------------------------------------
! call the aperture definition file for SPS. These are groups of elements
!--------------------------------------------------------------------------
 call, file = '/afs/cern.ch/eng/sps/2014
               /aperture/aperturedb_1.dbx';

!--------------------------------------------------------------------------
! aperture of QF1, QF2 and QD
!--------------------------------------------------------------------------
 call, file = '/afs/cern.ch/eng/sps/2014
               /aperture/aperturedb_2.dbx';
 option, echo;


!--------------------------------------------------------------------------
! call the sequence definition file for SPS
!--------------------------------------------------------------------------
 call, file = '/afs/cern.ch/eng/sps/2014/sequence/sps.seq';


!--------------------------------------------------------------------------
! aperture of individual elements
!--------------------------------------------------------------------------
 call, file = 'aperture/aperturedb_3.dbx';


!--------------------------------------------------------------------------
! call the two strength definition files for SPS: *.str & elements.str
!--------------------------------------------------------------------------


call, file = '/afs/cern.ch/eng/sps/2014
              /strength/ft_noqs_ext.str';

 call, file = '/afs/cern.ch/eng/sps/2014/strength/elements.str';


if (linear == yes)
{
    kLSDA  :=  0;
    kLSDB  :=  0;
    kLSFA  :=  0;
    kLSFB  :=  0;
    kLSFC  :=  kLSFA;
};




!------------------------------------------------------------------------
!install markers and isolate part of the SPS to simulate extractiont trough the TT20 
!------------------------------------------------------------------------


USE, period=SPS, range=#S/#E;
/*
QDA.619.coil       : QUADRUPOLE  , L := 3.791;
SEQEDIT,SEQUENCE=SPS;
INSTALL, ELEMENT=EXTRPT_6,CLASS=marker, AT=0.00457 + (3.791 / 2), FROM = QDA.61910;
flatten;
ENDEDIT;
*/

seqedit, sequence = sps;
INSTALL, ELEMENT = TCSM.new, CLASS=marker, AT=5158.5722, FROM = SPS$START;
flatten;
endedit;

s_lss4_crystal = 4031;

CRYSTAL1.UA9: MARKER;
CRYSTAL2.UA9: MARKER;
CRYSTAL3.UA9: MARKER;
CRYSTAL4.UA9: MARKER;
CRYSTAL5.UA9: MARKER;
CRYSTAL_lss4.UA9: MARKER;

!------------------------------------------------------------------------
!install markers and isolate part of the SPS to simulate extractiont trough the TT20 
!------------------------------------------------------------------------
USE, period=SPS, range=#S/#E;

SEQEDIT,SEQUENCE=SPS;
!remove, element=TCSM.51934;
remove, element = bshv.51795;
remove, element = tecs.51797;
remove, element = tecs.51799;
!============================================================================================
install, element= CRYSTAL1.UA9, at := 5178.1685;
install, element= CRYSTAL_lss4.UA9, at := s_lss4_crystal;
install, element= CRYSTAL2.UA9, at := 5179.4295;
install, element= CRYSTAL3.UA9, at := 5179.9245;
install, element= CRYSTAL4.UA9, at := 5180.8295;
install, element= CRYSTAL5.UA9, at := 5181.3245;
!============================================================================================
flatten;
ENDEDIT;


USE, sequence=SPS, range=#s/#e;

option, -echo;

!--------------------------------------------------------------------------
! Match tune and chroma
!--------------------------------------------------------------------------
use, period=sps;

call, file = '../cmd/matchtune.cmdx';
call, file = '../cmd/matchchroma.cmdx';

!call, file = "lss1_q171819_displacement.madx";  ! TODO file missing?
option, -echo;

select, flag=twiss, range=#E,column=name,s,betx,alfx,mux,x,px,dx,dpx,bety,alfy,muy,y,py,dy,dpy;
TWISS, DELTAP=0.0;
!savebeta,label=start, place=SPS$START;
write, table=twiss, file="../out/twiss_nominal_se.tfs";


!==========================================================
! Slow extraction sextupoles and bumpers values
!==========================================================

! Values in the last SFT_LONG cycle in trim editor

extr_sext = -0.11992;

! Value from 2010 SFT

!extr_sext = -0.107928 * 0.9 ;
sex_knob_value = 1;
knob_ext_sext = sex_knob_value;

klse10602 := extr_sext * knob_ext_sext;
klse22402 := extr_sext * knob_ext_sext;
klse40602 := extr_sext * knob_ext_sext;
klse52402 := extr_sext * knob_ext_sext;


!extr_sext_old = -0.168605;
!klse22402 := extr_sext_old ;
!klse40602 := extr_sext_old ;
!klsen42402 := -1 * extr_sext_old ;


!knob = 0.86; !-> 20 mm Z_s using Brennan's values
!knob = 0.88; !-> 20 mm Z_s using my values 

!kMPLH21431 = 4.9e-4 * knob;
!kMPLH21995 = 2.503e-4 * knob;
!kMPLH22195 = -3.5585e-4 * knob;
!kMPNH21732 = 3.3309e-4 * knob;
!kMPSH21202 = -7.6765e-5 * knob;


start_from_zs() : macro = {

    seqedit, sequence = sps;
    extract, sequence = sps, from = begi.10010, to = end.10010, newname=sps2;
    endedit;
    use, sequence = sps2;


    seqedit, sequence = sps2;
     flatten;
    cycle, start = AP.UP.ZS21633;
    endedit;

    use, period = SPS2;

    MPSH_rb.21202: RBEND, L = .714, angle=0.0;
    MPLH_rb.21431: RBEND, L = 2.06, angle=0.0;
    MPNH_rb.21732: RBEND, L = 2.04, angle=0.0;
    MPLH_rb.21995: RBEND, L = 2.06, angle=0.0;
    MPLH_rb.22195: RBEND, L = 2.06, angle=0.0;

    seqedit, sequence = sps2;

    replace, element = MPSH.21202, by = MPSH_rb.21202;
    replace, element = MPLH.21431, by = MPLH_rb.21431;
    replace, element = MPNH.21732, by = MPNH_rb.21732;
    replace, element = MPLH.21995, by = MPLH_rb.21995;
    replace, element = MPLH.22195, by = MPLH_rb.22195;

    flatten;
    endedit;

};

exec, start_from_zs();


use, period = SPS;

MPSH_rb.21202: RBEND, L = .714, angle=0.0;
MPLH_rb.21431: RBEND, L = 2.06, angle=0.0;
MPNH_rb.21732: RBEND, L = 2.04, angle=0.0;
MPLH_rb.21995: RBEND, L = 2.06, angle=0.0;
MPLH_rb.22195: RBEND, L = 2.06, angle=0.0;

seqedit, sequence = sps;

replace, element = MPSH.21202, by = MPSH_rb.21202;
replace, element = MPLH.21431, by = MPLH_rb.21431;
replace, element = MPNH.21732, by = MPNH_rb.21732;
replace, element = MPLH.21995, by = MPLH_rb.21995;
replace, element = MPLH.22195, by = MPLH_rb.22195;

flatten;
endedit;

USE, period=SPS, range=#S/#E;    ! Calculation for SPS ring

activate_bump(knob_value) : macro = {
    
    value, knob_value;
     ! SE North - no Q-split
    !/******
     select, flag=error, range=MPSH_rb.21202;
     efcomp, order:=0, dkn:=7.6765e-5 * knob_value;
     EPRINT;
     select, flag=error, clear;
     select, flag=error, range=MPLH_rb.21431;
     efcomp, order:=0, dkn:=-0.49e-3 * knob_value;
     EPRINT;
     select, flag=error, clear;
     select, flag=error, range=MPNH_rb.21732;
     efcomp, order:=0, dkn:=-0.33309e-3 * knob_value;
     EPRINT;
     select, flag=error, clear;
     select, flag=error, range=MPLH_rb.21995;
     efcomp, order:=0, dkn:=-0.2503e-3 * knob_value;
     EPRINT;
     select, flag=error, clear;
     select, flag=error, range=MPLH_rb.22195;
     efcomp, order:=0, dkn:=.35585e-3 * knob_value;
     EPRINT;
     select, flag=error, clear;

    select, flag=twiss, clear;
    select, flag=twiss, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
    TWISS, DELTAP=0.0;
    write, table=twiss, file="../out/twiss_before_extr_knob_value.tfs";

};
!********/

exec, activate_bump(1);
call, file = '../cmd/matchchroma.cmdx';
call, file = '../cmd/matchtune.cmdx';

select, flag=twiss, clear;
savebeta, label = zs_start, place = ap.up.zs21633;
select, flag=twiss, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
TWISS, DELTAP=0.0;
write, table=twiss, file="../out/twiss_before_extr_normal.tfs";


dpp_extreme = -1.5e-3;

qh = table(summ, q1) - dpp_extreme * table(summ, dq1);
qv = table(summ, q2) ;

value, qh;

match, sequence=SPS;
Global, Q1=qh, Q2= qv;
VARY, name=KQD, step=0.0001;
VARY, name=KQF1, step=0.0001;
Lmdif,calls=10,tolerance=1.0e-21;
Endmatch;

select, flag=twiss, clear;
savebeta, label = zs_start, place = ap.up.zs21633;
select, flag=twiss, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
TWISS, DELTAP=0.0;
write, table=twiss, file="../out/twiss_test_twiss1.tfs";

select, flag=twiss, clear;
savebeta, label = zs_start, place = ap.up.zs21633;
select, flag=twiss, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
TWISS, DELTAP=dpp_extreme;
write, table=twiss, file="../out/twiss_test_twiss12.tfs";
stop;


use, sequence = sps2;
exec, activate_bump(1);

select, flag=twiss, clear;
savebeta, label = zs_start2, place = ap.up.zs21633;
select, flag=twiss, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
TWISS, DELTAP=0.0;
write, table=twiss, file="../out/twiss_from_zs.tfs";

/**********
select, flag=twiss, clear;

select, flag=twiss, class = monitor, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
select, flag=twiss, class = hmonitor, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
select, flag=twiss, class = vmonitor, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
select, flag=twiss, class = instrument, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;

TWISS, DELTAP=0.0, centre;
write, table=twiss, file="../out/twiss_centre_before_extr.tfs";
**************/

create, table = spiral_step, column = knob_value, delta_x, delta_px, x_zs, px_zs,  final_x, final_px;

get_spiral_step(x0_bump, px0_bump) : macro = {

    m = -0.02025305;

    x_zs = 68e-3;
    px_zs = m * (x_zs - x0_bump) + px0_bump;

    zs_start2->x=x_zs;
    zs_start2->px=px_zs;

    select, flag=twiss, clear;
    savebeta, label=turn1, place=SPS2AP.UP.ZS21633_P_;
    select, flag=twiss, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
    TWISS, DELTAP=0.0, beta0=zs_start2;
    write, table=twiss, file="../out/twiss_bump_1_turn.tfs";

    select, flag=twiss, clear;
    savebeta, label=turn2, place=SPS2AP.UP.ZS21633_P_;
    select, flag=twiss, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
    TWISS, DELTAP=0.0, beta0=turn1;
    write, table=twiss, file="../out/twiss_bump_2_turn.tfs";

    select, flag=twiss, clear;
    savebeta, label=turn3, place=SPS2AP.UP.ZS21633_P_;
    select, flag=twiss, column=name,s,l,x,betx,dx,aper_1,y,bety,dy,aper_2, alfx, alfy, px, py, mux, muy,k2l;
    TWISS, DELTAP=0.0, beta0=turn2;
    write, table=twiss, file="../out/twiss_bump_3_turn.tfs";

    delta_x = table(twiss, SPS2AP.UP.ZS21633_P_, x) - x_zs;
    delta_px = table(twiss, SPS2AP.UP.ZS21633_P_, px) - px_zs;

    final_x = table(twiss, SPS2AP.UP.ZS21633_P_, x);
    final_px = table(twiss, SPS2AP.UP.ZS21633_P_, px);

};

/*******************
i = 1;

while(i <= 40){

    use, sequence = sps2;
    m_knob = ((0.8 - 1.2) / (1 - 40));
    n_knob = 1.2 - (m_knob * 40);

    !knob_value = i * 10.1053e-3 + 9.47894e-1;
    knob_value = i * m_knob + n_knob;

    value, knob_value;

    exec, activate_bump(knob_value);
    
    x0 = table(twiss, ap.up.zs21633, x);
    px0 = table(twiss, ap.up.zs21633, px);
     
    exec, get_spiral_step($x0, $px0);
    
    fill, table = spiral_step;
    i = i + 1;

};

write, table = spiral_step, file = "../out/spiral_step.tfs";
**********************/

! Extraction bump LSS2

knob := extr_bump_knob ;
extr_bump_knob = 0.945;
!extr_bump_knob = 1.;

use, sequence = sps;
exec, activate_bump(extr_bump_knob);

call, file = "makethin.madx";


!call, file = "thin_tracking_phase_space_analysis.madx";

!call, file = "thin_tracking.madx";

call, file = "thin_tracking_sample.madx";

stop;
